find_package(PkgConfig)

pkg_check_modules(PC_LIBPQXX libpqxx)
set(LIBPQXX_DEFINITIONS ${PC_LIBPQXX_CFLAGS_OTHER})

find_path(LIBPQXX_INCLUDE_DIRS pqxx
  HINTS ${PC_LIBPQXX_INCLUDEDIR} ${PC_LIBPQXX_INCLUDE_DIRS})

find_library(LIBPQXX_LIBRARIES NAMES pqxx libpqxx
  HINTS ${PC_LIBPQXX_LIBDIR} ${PC_LIBPQXX_LIBRARY_DIRS} )

include(FindPackageHandleStandardArgs)

set(LIBPQXX_VERSION_STRING ${PC_LIBPQXX_VERSION})

if("${LIBPQXX_VERSION_STRING}" VERSION_LESS "${PACKAGE_FIND_VERSION}")
  set(LIBPQXX_VERSION_COMPATIBLE FALSE)
else()
  set(LIBPQXX_VERSION_COMPATIBLE TRUE)
  if ("${LIBPQXX_VERSION_STRING}" VERSION_EQUAL "${PACKAGE_FIND_VERSION}")
    set(LIBPQXX_VERSION_EXACT TRUE)
  endif()
endif()
find_package_handle_standard_args(LIBPQXX
  REQUIRED_VARS LIBPQXX_LIBRARIES LIBPQXX_INCLUDE_DIRS
  VERSION_VAR LIBPQXX_VERSION_STRING)

if (LIBPQXX_INCLUDE_DIRS)
  if (${LIBPQXX_VERSION_COMPATABLE})
    set(LIBPQXX_FOUND 1)
  endif()
endif()

mark_as_advanced(
  LIBPQXX_INCLUDE_DIR
  LIBPQXX_LIBRARIE )
